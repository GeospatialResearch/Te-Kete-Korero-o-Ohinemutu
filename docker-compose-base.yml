version: "3.4"
services:
  www:
    build:
      context: .
      dockerfile: ./DockerfileNodeNginx
  api:
    build:
      context: .
      dockerfile: ./DockerfileDjango
    env_file: .dockerenv
    # args:
      # EMAIL_PASS: $EMAIL_PASSWORD
    environment:
      EMAIL_PASS: $EMAIL_PASSWORD
    ports:
      - '8000:8000'
    depends_on:
      - 'db'
    volumes:
      - media:/code/media

  db:
    image: mdillon/postgis:9.6
    env_file: .dockerenv
    ports:
      - '5432:5432'

  geoserver:
    image: geospatialri/geoserver-postgis:2.15.0
    env_file: .dockerenv
    ports:
      - '8080:8080'
    depends_on:
      - 'db'
    volumes:
      - geoserver-data:/opt/geoserver/data_dir

  portainer:
    image: portainer/portainer
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


## Storing data on the host rather than the container (Docker volumes can be used to persist your data)
#   geoserver:
#     image: kartoza/geoserver
#     ports:
#       - "8080:8080"
#     env_file:
#       - docker-env/geoserver.env
#     volumes:
#       - geoserver-data:/opt/geoserver/data_dir
#     depends_on:
#       - 'db'
#     healthcheck:
#         test: curl --fail -s http://localhost:8080/ || exit 1
#         interval: 1m30s
#         timeout: 10s
#         retries: 3
#
volumes:
  geoserver-data:
  media:
